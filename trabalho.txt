0 * * l 0
0 _ | r 34

;##############################################################################
; PRIMEIRA PARTE
;
; Realiza o complemento de 2
;##############################################################################

; Caminha para a direita invertendo números até encontrar espaço
1 0 1 r 1
1 1 0 r 1
1 = * l 2

; Somando 1
2 0 1 l 3
2 1 0 l 4

; Caminha para a esquerda repetindo o que lê
3 0 * l 3
3 1 * l 3
3 - * l 7 ; Realiza a soma

; Caminha para a esquerda invertendo números até encontrar sinal de igualdade
4 1 0 l 4
4 0 1 l 3
4 - * l 7 ; Realiza a soma

;##############################################################################
; SEGUNDA PARTE
;
; Realiza a cópia de elementos da parte esquerda de um operador
; para a parte esquerda do delimitador '|', para adição
; 
; a = 0 já lido
; b = 1 já lido
; | = delimitador
;##############################################################################

6 0 * r 6
6 1 * r 6
6 | * r 6
6 * * l 7

7 0 a l 8
7 1 b l 9
7 | * r 10
7 * * l 7

8 * * l 8
8 _ 0 r 6

9 * * l 9
9 _ 1 r 6

;##############################################################################
; TERCEIRA PARTE
;
; Procura operador
;##############################################################################

10 b 1 r 10
10 a 0 r 10
10 + * r 11add-zero
10 - * r 11 ; Realiza a soma normal, por causa do complemento de 2

;##############################################################################
; QUARTA PARTE
;
; Realiza a soma binária
;##############################################################################

11add-zero * * r 11add-zero
11add-zero _ 0 l 12

11 * * r 11
11 = * l 12

12 * * l 12
12 0 a l 14
12 1 b l 13
12 + * l 19 ; Estado que move os números para frente da igualdade
12 - * r delete-zero ; Apaga zero adicionado à esquerda

13 * * l 13
13 | * l 15 ; Estado para soma 1

14 * * l 14
14 | * l 18 ; Estado soma 0

15 * * l 15
15 1 0 l 15 ; Soma 1 e vai 1
15 _ 1 r 16 
15 0 1 r 16 ; Soma 1

16 * * r 16
16 | * l 17

17 0 a r 11
17 1 b r 11
17 * * l 17

18 * * l 18
18 _ 0 r 16
18 0 a r 11 ; 0 + 0
18 1 b r 11 ; 0 + 1

;##############################################################################
; QUINTA PARTE
;
; Move resultado para a parte direita da igualdade
;##############################################################################

19 * * l 19
19 _ * r 20

20 n _ r 23
20 b _ r 21
20 1 _ r 21
20 a _ r 22
20 0 _ r 22
20 | _ r 25

21 * * r 21
21 _ 1 l 19

22 * * r 22
22 _ 0 l 19

19sub * * l 19sub
19sub _  * r 20sub

20sub n _ r 21sub
20sub b _ r 21sub
20sub 1 * r 20check-b
20sub a _ r 22sub
20sub 0 _ r 22sub
20sub | _ r 25

21sub * * r 21sub
21sub _ 1 l 19sub

22sub * * r 22sub
22sub _ 0 l 19sub

20check-b b * l 20check-b
20check-b 1 a l 20add-zero
20check-b 0 a l 20
20check-b a * l 20delete-one
20check-b _ * * 22

20delete-one 1 _ r 20sub

20add-zero * * l 20add-zero
20add-zero _ 0 * 20sub

;##############################################################################
; SEXTA PARTE
;
; Formata o resultado
;##############################################################################

25 - * r 37
25 * * r 25
25 a 0 r 25
25 b 1 r 25
25 = * l 29

;##############################################################################
; SÉTIMA PARTE
;
; Checa se é necessário complemento de 2
;##############################################################################

27 * * l 27
27 - * r 28 ; encontrou um sinal de -, é necessário complemento de 2
27 + * * 29

28 * * r 28
28 = * r 1

;##############################################################################
; OITAVA PARTE
;
; Se chegou até aqui, foi calculado corretamente
;##############################################################################

29 * * * halt-accept

;##############################################################################
; NONA PARTE
;
; Checa tipo de operação a ser feita
;##############################################################################

34 * * r 34
34 + * l 35
34 - * r copy-add ; É necessário realizar complemento de 2

copy-add 1 * r copy-equal-right ; Adiciona um zero a esquerda
copy-add 0 * * 1 ; Vai para o complemento de 2

copy-equal-right * * r copy-equal-right
copy-equal-right = _ r copy-equal-right
copy-equal-right _ = l back-to-copy-right

back-to-copy-right * * l back-to-copy-right
back-to-copy-right 0 _ r copy-add-zero-right
back-to-copy-right 1 _ r copy-add-one-right
back-to-copy-right - * r copy-add-first-zero-right

copy-add-zero-right _ 0 l back-to-copy-right

copy-add-one-right _ 1 l back-to-copy-right

copy-add-first-zero-right _ 0 * 1

delete-zero a _ r copy-left
delete-zero b _ r copy-left

copy-left * * r copy-left
copy-left a _ l copy-add-zero-left
copy-left b _ l copy-add-one-left
copy-left = _ l copy-add-equal-left

copy-add-zero-left _ a r copy-left

copy-add-one-left _ b r copy-left

copy-add-equal-left _ = l finish-copy-add

finish-copy-add * * l finish-copy-add
finish-copy-add - * r 19sub

;##############################################################################
; DÉCIMA PARTE
;
; Reposiciona cabeçote para soma
;##############################################################################

35 * * l 35
35 _ * r 6 ; Cópia de elementos para adição

;##############################################################################
; DÉCIMA PRIMEIRA PARTE
;
; Desfaz o complemento de 2 para o subtraendo
;##############################################################################

; Caminha para a direita invertendo números até encontrar igualdade
37 a b r 37
37 b a r 37
37 0 1 r 37
37 1 0 r 37
37 = * l 38

; Somando 1
38 a b l 39
38 b a l 40
38 0 1 l 39
38 1 0 l 40

; Caminha para a esquerda repetindo o que lê
39 a * l 39
39 b * l 39
39 0 * l 39
39 1 * l 39
39 - * r 25

; Caminha para a esquerda invertendo números até encontrar sinal de igualdade
40 b a l 40
40 a b l 39
40 1 0 l 40
40 0 1 l 39
40 - * r 25